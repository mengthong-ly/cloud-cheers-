name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-2

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        env:
          MYSQL_HOST: ${{ secrets.MYSQL_HOST }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: MYSQL_HOST,MYSQL_USER,MYSQL_PASSWORD,MYSQL_DATABASE
          script: |
            # Navigate to home directory
            cd /home/ec2-user

            # Gracefully stop the existing container
            if sudo docker ps -q -f name=adoring_bhabha; then
              echo "Stopping existing container..."
              sudo docker stop adoring_bhabha
              sudo docker rm adoring_bhabha
            fi

            # Clean up unused images to free space
            sudo docker system prune -f

            # Remove old project directory
            sudo rm -rf cloud-cheers-

            # Clone the latest code
            git clone https://github.com/mengthong-ly/cloud-cheers-
            cd cloud-cheers-

            # Create .env file
            cat > .env << EOF
            DB_HOST=${MYSQL_HOST}
            DB_USER=${MYSQL_USER}
            DB_PASSWORD=${MYSQL_PASSWORD}
            DB_NAME=${MYSQL_DATABASE}
            PORT=3000
            EOF

            # Build new image
            echo "Building Docker image..."
            sudo docker build -t mengthong .  exit 1

            # Run new container
            echo "Starting new container..."
            sudo docker run -d \
              --name adoring_bhabha \
              --restart unless-stopped \
              -p 80:3000 \
              -e DB_HOST="${MYSQL_HOST}" \
              -e DB_USER="${MYSQL_USER}" \
              -e DB_PASSWORD="${MYSQL_PASSWORD}" \
              -e DB_NAME="${MYSQL_DATABASE}" \
              -e PORT=3000 \
              mengthong

            # Verify container is running
            if ! sudo docker ps -q -f name=adoring_bhabha; then
              echo "Container failed to start!"
              sudo docker logs adoring_bhabha
              exit 1
            fi

            # Wait for application to start
            echo "Waiting for application to start..."
            sleep 10

            # Test application
            if curl -f http://localhost:80 >/dev/null 2>&1; then
              echo "Application is running successfully!"
            else
              echo "Application failed to start properly"
              sudo docker logs adoring_bhabha
              exit 1
            fi